"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9941],{4137:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>c});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),o=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=o(e.components);return r.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),m=o(t),c=a,k=m["".concat(p,".").concat(c)]||m[c]||d[c]||l;return t?r.createElement(k,i(i({ref:n},s),{},{components:t})):r.createElement(k,i({ref:n},s))}));function c(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=m;var u={};for(var p in n)hasOwnProperty.call(n,p)&&(u[p]=n[p]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var o=2;o<l;o++)i[o]=t[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5398:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>o});var r=t(7462),a=(t(7294),t(4137));const l={id:"rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f",title:"rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f",sidebar_position:2,tags:["rust"]},i=void 0,u={unversionedId:"Rust/rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f",id:"Rust/rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f",title:"rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f",description:"\u7b2c\u4e00\u4e2a rust \u4ee3\u7801",source:"@site/wiki/dev/Rust/01.rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f.md",sourceDirName:"Rust",slug:"/Rust/rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f",permalink:"/sword-wiki/dev/Rust/rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f",draft:!1,tags:[{label:"rust",permalink:"/sword-wiki/dev/tags/rust"}],version:"current",lastUpdatedBy:"wxvirus",lastUpdatedAt:1669650434,formattedLastUpdatedAt:"2022\u5e7411\u670828\u65e5",sidebarPosition:2,frontMatter:{id:"rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f",title:"rust\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f",sidebar_position:2,tags:["rust"]},sidebar:"tutorialSidebar",previous:{title:"windows\u5b89\u88c5\u548c\u914d\u7f6e",permalink:"/sword-wiki/dev/Rust/windows\u5b89\u88c5\u548c\u914d\u7f6e"},next:{title:"cargo",permalink:"/sword-wiki/dev/Rust/cargo"}},p={},o=[{value:"\u7b2c\u4e00\u4e2a rust \u4ee3\u7801",id:"\u7b2c\u4e00\u4e2a-rust-\u4ee3\u7801",level:2},{value:"\u5b89\u88c5\u6e90\u7801",id:"\u5b89\u88c5\u6e90\u7801",level:2},{value:"\u7b2c\u4e00\u4e2a\u6bd4\u8f83\u6b63\u5e38\u7684\u7a0b\u5e8f",id:"\u7b2c\u4e00\u4e2a\u6bd4\u8f83\u6b63\u5e38\u7684\u7a0b\u5e8f",level:2},{value:"\u6570\u636e\u7ed3\u6784",id:"\u6570\u636e\u7ed3\u6784",level:2},{value:"\u53d8\u91cf\u51fd\u6570\u548c\u7ed3\u6784\u4f53",id:"\u53d8\u91cf\u51fd\u6570\u548c\u7ed3\u6784\u4f53",level:2},{value:"\u53d8\u91cf",id:"\u53d8\u91cf",level:3},{value:"\u5e38\u91cf",id:"\u5e38\u91cf",level:3},{value:"\u9759\u6001\u53d8\u91cf",id:"\u9759\u6001\u53d8\u91cf",level:3},{value:"\u51fd\u6570",id:"\u51fd\u6570",level:3},{value:"\u7ed3\u6784\u4f53",id:"\u7ed3\u6784\u4f53",level:3},{value:"enum",id:"enum",level:3}],s={toc:o};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u7b2c\u4e00\u4e2a-rust-\u4ee3\u7801"},"\u7b2c\u4e00\u4e2a rust \u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    println!("hi wxvirus")\n}\n\n')),(0,a.kt)("p",null,"\u8fd9\u91cc\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"println!"),"\uff0c\u662f\u4e00\u4e2a\u5b8f"),(0,a.kt)("p",null,"\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"rustc"),"\u8fdb\u884c\u7f16\u8bd1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\u279c  rustworkspace rustc main.rs\n\u279c  rustworkspace ./main\nhi wxvirus\n\u279c  rustworkspace\n")),(0,a.kt)("h2",{id:"\u5b89\u88c5\u6e90\u7801"},"\u5b89\u88c5\u6e90\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rustup component add rust-src\n")),(0,a.kt)("p",null,"\u7136\u540e\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"vs code"),"\u5b89\u88c5\u4e00\u4e9b\u63d2\u4ef6\uff0c\u91cd\u65b0\u6253\u5f00\u4e0a\u8ff0\u6587\u4ef6\u76ee\u5f55\uff0c\u5c31\u53ef\u4ee5\u70b9\u51fb\u8fdb\u5165",(0,a.kt)("inlineCode",{parentName:"p"},"println!"),"\u8fd9\u4e2a\u5b8f\u91cc\u9762\u53bb\u67e5\u770b\u6e90\u7801\u4e86\u3002"),(0,a.kt)("h2",{id:"\u7b2c\u4e00\u4e2a\u6bd4\u8f83\u6b63\u5e38\u7684\u7a0b\u5e8f"},"\u7b2c\u4e00\u4e2a\u6bd4\u8f83\u6b63\u5e38\u7684\u7a0b\u5e8f"),(0,a.kt)("p",null,"\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"cargo new scrape_url"),"\u751f\u6210\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c\u5165\u53e3\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"src/main.rs"),"\uff0c\u6211\u4eec\u53ef\u4ee5\u518d",(0,a.kt)("inlineCode",{parentName:"p"},"Cargo.toml"),"\u6587\u4ef6\u91cc\u52a0\u5165\u9879\u76ee\u4f9d\u8d56"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nreqwest = { version = "0.11", features = ["blocking"] }\nhtml2md = "0.2"\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," \u662f Rust \u9879\u76ee\u7684\u914d\u7f6e\u7ba1\u7406\u6587\u4ef6\uff0c\u6211\u4eec\u6dfb\u52a0\u4e862\u4e2a\u4f9d\u8d56\uff0c",(0,a.kt)("a",{parentName:"p",href:"https://github.com/seanmonstar/reqwest"},"reqwest")," \u662f\u4e00\u4e2a HTTP \u5ba2\u6237\u7aef\uff0c\u5b83\u7684\u4f7f\u7528\u65b9\u5f0f\u548c Python \u4e0b\u7684 request \u7c7b\u4f3c\uff1bhtml2md \u987e\u540d\u601d\u4e49\uff0c\u628a HTML \u6587\u672c\u8f6c\u6362\u6210 Markdown\u3002"),(0,a.kt)("p",null,"\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"src/main.rs"),"\u7f16\u5199\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::fs;\n\nfn main() {\n    let url = "https://www.rust-lang.org/";\n    let output = "rust.md";\n\nprintln!("Fetching url: {}", url);\nlet body = reqwest::blocking::get(url).unwrap().text().unwrap();\n\nprintln!("Converting html to markdown...");\nlet md = html2md::parse_html(&body);\n\nfs::write(output, md.as_bytes()).unwrap();\nprintln!("Converted markdown has been saved in {}.", output);\n}\n')),(0,a.kt)("p",null,"\u4fdd\u5b58\u540e\uff0c\u5728\u547d\u4ee4\u884c\u4e0b\u6267\u884c",(0,a.kt)("inlineCode",{parentName:"p"},"cargo build && cargo run"),"\u5728\u6f2b\u957f\u7684\u7f16\u8bd1\u540e\uff0c\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\uff0c\u5c31\u4f1a\u770b\u5230\u5982\u4e0b\u8f93\u51fa\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Fetching url: https://www.rust-lang.org/\nConverting html to markdown...\nConverted markdown has been saved in rust.md.\n")),(0,a.kt)("p",null,"\u8fd8\u4f1a\u9644\u5e26\u751f\u6210\u4e00\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"rust.md"),"\u6587\u4ef6\uff0c\u8fd9\u4e2a\u5c31\u662f\u5c06",(0,a.kt)("inlineCode",{parentName:"p"},"rust"),"\u5b98\u7f51\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"html"),"\u8f6c\u6362\u4e3a\u4e86\u4e00\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"markdown"),"\u6587\u4ef6\u3002"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"\u57fa\u7840\u7c7b\u578b\u548c\u4e00\u4e9b\u7ec3\u4e60"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::fs;\n\nfn apply(value: i32, f: fn(i32) -> i32) -> i32 {\n    f(value)\n    }\n\nfn square(value: i32) -> i32 {\n    value * value\n    }\n\nfn cube(value: i32) -> i32 {\n    value * value * value\n    }\n\nfn pi() -> f64 {\n    3.141592653\n    }\n\nfn not_pi() {\n    3.1415;\n    }\n\nfn main() {\n    let url = "https://www.rust-lang.org/";\n    let output = "rust.md";\n\nprintln!("Fetching url: {}", url);\nlet body = reqwest::blocking::get(url).unwrap().text().unwrap();\n\nprintln!("Converting html to markdown");\nlet md = html2md::parse_html(&body);\n\nfs::write(output, md.as_bytes()).unwrap();\nprintln!("Converted to Markdown: {}", output);\n\nprintln!("apply square: {}", apply(2, square));\nprintln!("apply cube: {}", apply(2, cube));\n\nlet is_pi = pi();\nlet is_unit1 = not_pi();\nlet is_unit2 = {\n    pi();\n    };\n\nprintln!(\n"is_pi: {:?}, is_unit1: {:?}, is_unit2: {:?}",\nis_pi, is_unit1, is_unit2\n);\n}\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\u279c  scrape_url git:(master) \u2717 cargo build && cargo run\nCompiling scrape_url v0.1.0 (/Users/wujie/workspace/rustworkspace/scrape_url)\nFinished dev [unoptimized + debuginfo] target(s) in 0.53s\nFinished dev [unoptimized + debuginfo] target(s) in 0.06s\nRunning `target/debug/scrape_url`\nFetching url: https://www.rust-lang.org/\nConverting html to markdown\nConverted to Markdown: rust.md\napply square: 4\napply cube: 8\nis_pi: 3.141592653, is_unit1: (), is_unit2: ()\n")),(0,a.kt)("h2",{id:"\u6570\u636e\u7ed3\u6784"},"\u6570\u636e\u7ed3\u6784"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"  \u6570\u636e\u7ed3\u6784\u662f\u7a0b\u5e8f\u7684\u6838\u5fc3\u7ec4\u6210\u90e8\u5206\uff0c\u5728\u5bf9\u590d\u6742\u7684\u95ee\u9898\u8fdb\u884c\u5efa\u6a21\u65f6\uff0c\u6211\u4eec\u5c31\u8981\u81ea\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\u3002Rust \u975e\u5e38\u5f3a\u5927\uff0c\u53ef\u4ee5\u7528 struct \u5b9a\u4e49\u7ed3\u6784\u4f53\uff0c\u7528 enum \u5b9a\u4e49\u6807\u7b7e\u8054\u5408\u4f53\uff08tagged union\uff09\uff0c\u8fd8\u53ef\u4ee5\u50cf Python \u4e00\u6837\u968f\u624b\u5b9a\u4e49\u5143\u7ec4\uff08tuple\uff09\u7c7b\u578b\u3002")),(0,a.kt)("p",null,"\u5b9a\u4e49\u4e00\u4e2a\u804a\u5929\u670d\u52a1\u7684\u6570\u636e\u7ed3\u6784"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'#[derive(Debug)]\nenum Gender {\n    Unspecified = 0,\n    Female = 1,\n    Male = 2,\n    }\n\n#[derive(Debug, Copy, Clone)]\nstruct UserId(u64);\n#[derive(Debug, Copy, Clone)]\nstruct TopicId(u64);\n\n#[derive(Debug)]\nstruct User {\n    id: UserId,\n    name: String,\n    gender: Gender,\n    }\n\n#[derive(Debug)]\nstruct Topic {\n    id: TopicId,\n    name: String,\n    owner: UserId,\n    }\n\n// \u5b9a\u4e49\u804a\u5929\u5ba4\u4e2d\u53ef\u80fd\u53d1\u751f\u7684\u4e8b\u4ef6\n#[derive(Debug)]\nenum Event {\n    Join((UserId, TopicId)),\n    Leave((UserId, TopicId)),\n    Message((UserId, TopicId, String)),\n    }\n\nfn main() {\n    let alice = User {\n        id: UserId(1),\n        name: "Alice".into(),\n        gender: Gender::Female,\n        };\n        let bob = User {\n            id: UserId(2),\n            name: "Bob".into(),\n            gender: Gender::Male,\n            };\n\nlet topic = Topic {\n    id: TopicId(1),\n    name: "rust".into(),\n    owner: UserId(1),\n    };\n    let event1 = Event::Join((alice.id, topic.id));\n    let event2 = Event::Join((bob.id, topic.id));\n    let event3 = Event::Message((alice.id, topic.id, "Hello world!".into()));\n    println!(\n    "event1: {:?}, event2: {:?}, event3: {:?}",\n    event1, event2, event3\n    );\n    }\n\n')),(0,a.kt)("h2",{id:"\u53d8\u91cf\u51fd\u6570\u548c\u7ed3\u6784\u4f53"},"\u53d8\u91cf\u51fd\u6570\u548c\u7ed3\u6784\u4f53"),(0,a.kt)("h3",{id:"\u53d8\u91cf"},"\u53d8\u91cf"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"  \u5b9a\u4e49")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u53ef\u53d8\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"let x: T;")),(0,a.kt)("li",{parentName:"ul"},"\u53ef\u53d8\uff1a",(0,a.kt)("inlineCode",{parentName:"li"},"let mut x: T;"))),(0,a.kt)("admonition",{title:"\u8bf4\u660e",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"\u5728\u6808\u4e0a\u5206\u914d\u4e00\u4e2a\u7c7b\u578b\u4e3aT\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u540d\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"x"),"\u3002\u5f53\u58f0\u660e\u4e3a\u53ef\u53d8\u53d8\u91cf\u65f6\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"x"),"\u7684\u5185\u5bb9\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u4e14\u5141\u8bb8\u53ef\u53d8\u5f15\u7528")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"\u793a\u4f8b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'let name = "wujie";\nlet pi = 3.141592654;\n\nlet mut v: Vec<u8> = Vec::new();\n'))),(0,a.kt)("h3",{id:"\u5e38\u91cf"},"\u5e38\u91cf"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"  \u5b9a\u4e49")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"const X: T = <value>;\n")),(0,a.kt)("p",null,"\u5e38\u91cf\u662f\u4e00\u4e2a\u53f3\u503c(rvalue)\uff0c\u5b83\u4e0d\u80fd\u88ab\u4fee\u6539\u3002",(0,a.kt)("strong",{parentName:"p"},"\u5e38\u91cf\u7f16\u8bd1\u540e\u653e\u5165\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6570\u636e\u6bb5"),"\uff0c\u5168\u5c40\u53ef\u4ee5\u8bbf\u95ee\u3002"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"\u793a\u4f8b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"const PI: f64 = 3.141592654;\n"))),(0,a.kt)("h3",{id:"\u9759\u6001\u53d8\u91cf"},"\u9759\u6001\u53d8\u91cf"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"  \u5b9a\u4e49")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"static X: T = T::new();\nstatic mut X: T = T::new();\n")),(0,a.kt)("p",null,"\u9759\u6001\u53d8\u91cf\u548c\u5e38\u91cf\u4e00\u6837\u5168\u5c40\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5b83\u4e5f\u88ab\u7f16\u5165\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6570\u636e\u6bb5\u4e2d\u3002\u9759\u6001\u53d8\u91cf\u53ef\u4ee5\u88ab\u58f0\u660e\u4e3a\u53ef\u53d8\u3002"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"\u5728\u4f7f\u7528\u9759\u6001\u53d8\u91cf\u65f6\uff0c\u7531\u4e8e\u4e00\u4e9b\u9650\u5236\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"lazy_static"),"\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u5177\u3002")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"\u793a\u4f8b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"// \u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\nstatic V: Vec<u8> = Vec::new();\n\n// \u65e0\u6cd5\u7f16\u8bd1\u901a\u8fc7\uff0c\u9700\u8981\u4f7f\u7528 lazy_static\nstatic MAP: HashMap<String, String> = HashMap::new();\n"))),(0,a.kt)("h3",{id:"\u51fd\u6570"},"\u51fd\u6570"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"  \u5b9a\u4e49"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn x(a1: T1, ...) -> T {}\n"))),(0,a.kt)("p",null,"\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"Rust"),"\u4e2d\uff0c\u51fd\u6570\u5982\u679c\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u5176\u8fd4\u56de\u503c\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"unit"),"\uff0c\u7b26\u53f7\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"()")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn valid_email(input: &str) -> bool {\n    // ...\n}\n")),(0,a.kt)("h3",{id:"\u7ed3\u6784\u4f53"},"\u7ed3\u6784\u4f53"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"  \u5b9a\u4e49"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"struct s {...}\n"))),(0,a.kt)("p",null,"\u7ed3\u6784\u4f53\u6709\u4e09\u79cd\u5f62\u5f0f\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u7a7a\u7ed3\u6784\u4f53\uff0c\u4e0d\u5360\u4efb\u4f55\u5185\u5b58\u7a7a\u95f4"),(0,a.kt)("li",{parentName:"ol"},"\u5143\u7ec4\u7ed3\u6784\u4f53\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"struct"),"\u7684\u6bcf\u4e2a\u57df\u90fd\u662f\u533f\u540d\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee"),(0,a.kt)("li",{parentName:"ol"},"\u666e\u901a\u7ed3\u6784\u4f53\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"struct"),"\u7684\u6bcf\u4e2a\u57df\u90fd\u6709\u540d\u5b57\uff0c\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u8bbf\u95ee")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"struct Marker;\n\nstruct Color(u8, u8, u8);\n\nstruct Person {\n    name: String,\n    age: u8,\n}\n")),(0,a.kt)("h3",{id:"enum"},"enum"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"enum E {...}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"enum"),"\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6807\u7b7e\u8054\u5408\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"enum"),"\u53ef\u4ee5\u627f\u8f7d\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u4e00\u79cd"),(0,a.kt)("li",{parentName:"ol"},"\u679a\u4e3e")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"enum Option<T> {\n    Some(T),\n    None,\n}\n\nenum Status {\n    Ok = 0,\n    BadName = 1,\n    NotFound = 2,\n    // ...\n}\n")))}d.isMDXComponent=!0}}]);